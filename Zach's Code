package org.usfirst.frc.team3352.robot;


import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.RobotDrive.MotorType;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */


public class Robot extends IterativeRobot {

	/* talons for arcade drive */
	CANTalon frontLeftMotor = new CANTalon(6);
	CANTalon midLeftMotor = new CANTalon(3);
	CANTalon frontRightMotor = new CANTalon(2);
	CANTalon midRightMotor = new CANTalon(4);
	CANTalon shooterMotor = new CANTalon(1);
	double speed;

	/* extra talons for six motor drives */

	
	RobotDrive drive = new RobotDrive(frontLeftMotor, midLeftMotor, frontRightMotor, midRightMotor);
	
	Joystick joy = new Joystick(0);
	Joystick driver = new Joystick(1);
    /**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
    public void robotInit() {
    	/* take our extra talons and just have them follow the Talons updated in arcadeDrive */
    /*	
     * _leftSlave.changeControlMode(TalonControlMode.Follower)
    	_rightSlave.changeControlMode(TalonControlMode.Follower);
    	_leftSlave.set(11); 							/* device IDs here (2 of 2) */
    	//_rightSlave.set(14); 
   
    	/* the Talons on the left-side of my robot needs to drive reverse(red) to move robot forward.
    	 * Since _leftSlave just follows frontLeftMotor, no need to invert it anywhere. */
    	//_drive.setInvertedMotor(MotorType.kFrontLeft, true);
    	//_drive.setInvertedMotor(MotorType.kRearLeft, true);
    }

    /**
     * This function is called periodically during operator control
     */
    public void teleopPeriodic() {
    	//double forward = _joy.getRawAxis(1); // logitech gampad left X, positive is forward
    	//double turn = _joy.getRawAxis(2); //logitech gampad right X, positive means turn right
    	//_drive.arcadeDrive(forward, turn);
    	drive.arcadeDrive(-driver.getRawAxis(1), -driver.getRawAxis(4));
    	if(joy.getRawButton(1)){
    		speed=joy.getRawAxis(1);
    	}
    	shooterMotor.set(speed);
    	SmartDashboard.putNumber("Speed", speed);
    }
    
}
